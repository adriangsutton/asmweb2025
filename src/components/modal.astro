---
const { id, imageSrc, imageAlt } = Astro.props;
---

<div
  id={id}
  class="fixed inset-0 z-50 bg-black/80 flex items-center justify-start flex-col gap-4 opacity-0 transition-opacity duration-200 hidden"
>
  <div class="flex flex-row w-screen max-w-screen p-3 bg-secondary gap-6">
    <div class="flex flex-grow items-center w-full">
      <p
        class="text-lg text-black truncate whitespace-nowrap font-bold"
        id="modal-title"
      >
        {imageAlt}
      </p>
      <div
        class="flex-row gap-2 items-center p-2 text-primary opacity-0 hidden md:flex"
        id="modal-attribution-container"
      >
        <svg
          fill="currentColor"
          height="18px"
          width="18px"
          version="1.1"
          id="Capa_1"
          xmlns="http://www.w3.org/2000/svg"
          xmlns:xlink="http://www.w3.org/1999/xlink"
          viewBox="0 0 487 487"
          xml:space="preserve"
        >
          <g>
            <g>
              <path
                d="M308.1,277.95c0,35.7-28.9,64.6-64.6,64.6s-64.6-28.9-64.6-64.6s28.9-64.6,64.6-64.6S308.1,242.25,308.1,277.95z
			 M440.3,116.05c25.8,0,46.7,20.9,46.7,46.7v122.4v103.8c0,27.5-22.3,49.8-49.8,49.8H49.8c-27.5,0-49.8-22.3-49.8-49.8v-103.9
			v-122.3l0,0c0-25.8,20.9-46.7,46.7-46.7h93.4l4.4-18.6c6.7-28.8,32.4-49.2,62-49.2h74.1c29.6,0,55.3,20.4,62,49.2l4.3,18.6H440.3z
			 M97.4,183.45c0-12.9-10.5-23.4-23.4-23.4c-13,0-23.5,10.5-23.5,23.4s10.5,23.4,23.4,23.4C86.9,206.95,97.4,196.45,97.4,183.45z
			 M358.7,277.95c0-63.6-51.6-115.2-115.2-115.2s-115.2,51.6-115.2,115.2s51.6,115.2,115.2,115.2S358.7,341.55,358.7,277.95z"
              ></path>
            </g>
          </g>
        </svg>
        <p class="text-sm truncate whitespace-nowrap" id="modal-attribution">
        </p>
      </div>
    </div>
    <button
      class="text-primary hover:text-gray-600 transition-colors download-btn bg-secondary"
      data-image-src={""}
      data-image-name={""}
    >
      <svg
        width="27px"
        height="27px"
        viewBox="0 0 20 20"
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
      >
        <path
          fill="currentColor"
          fill-rule="evenodd"
          d="M11 2a1 1 0 10-2 0v7.74L5.173 6.26a1 1 0 10-1.346 1.48l5.5 5a1 1 0 001.346 0l5.5-5a1 1 0 00-1.346-1.48L11 9.74V2zm-7.895 9.204A1 1 0 001.5 12v3.867a2.018 2.018 0 002.227 2.002c1.424-.147 3.96-.369 6.273-.369 2.386 0 5.248.236 6.795.383a2.013 2.013 0 002.205-2V12a1 1 0 10-2 0v3.884l-13.895-4.68zm0 0L2.5 11l.605.204zm0 0l13.892 4.683a.019.019 0 01-.007.005h-.006c-1.558-.148-4.499-.392-6.984-.392-2.416 0-5.034.23-6.478.38h-.009a.026.026 0 01-.013-.011V12a.998.998 0 00-.394-.796z"
        ></path>
      </svg>
    </button>
    <button
      class="text-primary hover:text-gray-600 transition-colors"
      id="close-modal"
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        class="h-8 w-8"
        fill="none"
        viewBox="0 0 24 24"
        stroke="currentColor"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M6 18L18 6M6 6l12 12"></path>
      </svg>
    </button>
  </div>
  <div
    class="relative max-w-[90vw] max-h-[90vh] flex-grow w-full flex justify-center pointer-events-none"
  >
    <img
      src={imageSrc}
      alt={imageAlt}
      class="max-w-full max-h-[90vh] object-contain"
    />
  </div>
</div>
<script>
  function closeModal() {
    const modal = document.getElementById("image-modal");
    if (modal) {
      modal.classList.add("hidden");
      modal.classList.remove("opacity-100");
      document.body.style.overflow = "auto";

      const attributionContainer = document.getElementById(
        "modal-attribution-container",
      );

      if (attributionContainer) {
        attributionContainer.classList.add("opacity-0");
        attributionContainer.classList.remove("opacity-100");
      }
    }
  }

  // Close modal when clicking outside the image
  document.getElementById("image-modal")?.addEventListener("click", (e) => {
    if (e.target === e.currentTarget) {
      closeModal();
    }
  });

  document.getElementById("close-modal")?.addEventListener("click", () => {
    closeModal();
  });

  // Close modal with Escape key
  document.addEventListener("keydown", (e) => {
    if (e.key === "Escape") {
      closeModal();
    }
  });
</script>
