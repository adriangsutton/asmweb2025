---
import BaseLayout from "../../layouts/base.astro";
import { getCollection, render } from "astro:content";
import { Image } from "astro:assets";
import WorkMetadata from "../../components/work-metadata.astro";
const works = await getCollection("works");

import FallbackBanner from "../../images/banner-fallback.png";
import FallbackCover from "../../images/fallback-title-image.jpeg";

export async function getStaticPaths() {
  const works = await getCollection("works");

  return works.map((work) => ({ params: { workId: work.data.workNumber } }));
}

const { workId } = Astro.params;

const work = works.find((work) => work.data.workNumber === workId);

if (!work) {
  throw new Error(`Work ${workId} not found`);
}

const { Content } = await render(work);

// Audio
const audioPath = work?.data.audio ?? null;

let correctedAudioPath = audioPath;

if (audioPath) {
  if (!audioPath.includes(".mp3")) {
    correctedAudioPath = audioPath + ".mp3";
  }

  correctedAudioPath = `${import.meta.env.BASE_URL}api/serve-audio/${encodeURIComponent(correctedAudioPath)}`;
}

// PDF
const pdfPath = work?.data.pdf
  ? work.data.pdf.replace("./", "../../works/")
  : null;

let correctedPdfPath = pdfPath;

if (pdfPath && !pdfPath.includes(".pdf")) {
  if (!pdfPath.includes(".pdf")) {
    correctedPdfPath = pdfPath + ".pdf";
  }

  correctedPdfPath = `${import.meta.env.BASE_URL}api/serve-pdf/${encodeURIComponent(correctedPdfPath)}`;
}
---

<style>
  .gradient {
    background-color: hsla(0, 0%, 52%, 1);
    background-image:
      radial-gradient(
        at 20% 74%,
        hsla(30, 82%, 55%, 0.47) 0px,
        transparent 50%
      ),
      radial-gradient(
        at 21% 13%,
        hsla(201, 47%, 34%, 0.52) 0px,
        transparent 50%
      ),
      radial-gradient(
        at 76% 72%,
        hsla(17, 74%, 52%, 0.56) 0px,
        transparent 50%
      ),
      radial-gradient(
        at 79% 13%,
        hsla(195, 26%, 52%, 0.35) 0px,
        transparent 50%
      );
  }
</style>
<BaseLayout staticHeader={true}>
  <div
    class="flex flex-row gap-4 pt-24 w-full px-4 gradient justify-center items-start min-h-[calc(100vh-50px)]"
  >
    <div class="flex flex-col gap-4 max-w-2xl pb-4">
      <div
        class="flex flex-row gap-2 relative h-48 justify-center items-center rounded-md overflow-hidden bg-black"
      >
        <div class="absolute top-0 left-0 w-full h-full z-0">
          {
            work.data.bannerImage ? (
              <Image
                src={work.data.bannerImage}
                alt={work.data.title}
                class="w-full h-full object-cover opacity-40"
              />
            ) : (
              <Image
                src={FallbackBanner}
                alt={work.data.title}
                class="w-full h-full object-cover opacity-40"
              />
            )
          }
        </div>
        <div class="relative z-10 flex flex-row gap-4 p-4 items-center">
          <div
            class="w-24 h-24 rounded-lg overflow-hidden flex items-center justify-center"
          >
            {
              work.data.titleImage ? (
                <Image src={work.data.titleImage} alt={work.data.title} />
              ) : (
                <Image
                  src={FallbackCover}
                  alt={work.data.title}
                  class="w-full h-full object-cover"
                />
              )
            }
          </div>
          <div class="flex flex-col gap-2">
            <h2 class="text-xl md:text-3xl font-bold text-white">
              {`${work.data.title}`}
            </h2>
          </div>
        </div>
      </div>
      <WorkMetadata
        work={work}
        audioPath={correctedAudioPath}
        pdfPath={correctedPdfPath}
        inline={true}
      />
      <div
        class="p-4 bg-white/50 rounded-md overflow-hidden flex flex-col gap-4 fragment-content-red"
        id="content-wrapper"
      >
        <Content />
      </div>
    </div>
    <WorkMetadata
      work={work}
      audioPath={correctedAudioPath}
      pdfPath={correctedPdfPath}
    />
  </div>
</BaseLayout>
<script>
  const wrapper = document.getElementById("content-wrapper");
  if (wrapper && wrapper.innerHTML.trim() === "") {
    wrapper.style.display = "none";
  }
</script>
